Code Quality Feedback for 97632:
Some of your method names are potentially problematic in that they are a sometimes bit too long and are just single words. The following methods are really quite long: UI.useDatabasemenu() and UI.useTablemenu(). Could they be refactored into shorter, separate methods ? The following methods have high density of IF/CASE statements: UI.useRecordmenu(), UI.useDatabasemenu(), UI.useTablemenu() and UI.useMainmenu(). Perhaps these could be implemented more elegantly ? The "UI" class has very deep nesting, which could make it difficult to maintain in the long term. The following methods have particularly complex structures: UI.useMainmenu() and UI.useDatabasemenu() - this might make them difficult to comprehend. The following methods access global variables: Table.updateRecord(), Table.selectRecord(), Table.checkCompositePrimarykey(), Table.checkCompositePrimarykeyConstraint(), Table.getColumnwidth(), Table.printRecord(), Table.readTable(), Table.writeTable(), Database.checkTablename(), Database.dropTable(), Database.getTablenamelength(), Database.printTablename(), UI.checkDatabasename(), UI.useMainmenu(), UI.printDatabasemenu(), UI.useDatabasemenu(), UI.printTablemenu(), UI.useTablemenu(), UI.useRecordmenu(), UI.getDatabasenamelength() and UI.printDatabaseNames(). There are declared but unused constructor parameters in a some of your classes (Table->Type). The "UI" class contains some unusual indentation in places. Significant amounts of code has been replicated in Database, UI, Table and Record. Avoid copy-and-paste duplication: keep your code DRY ! A number of classes contain some very long lines of code: Table and UI - are such long lines really necessary ? Your code contains some "copy-and-pasted" method similarities: UI.useDatabasemenu()-UI.useMainmenu(), UI.useDatabasemenu()-UI.useTablemenu() and UI.useMainmenu()-UI.useTablemenu(). Remember to keep your code DRY ! 

